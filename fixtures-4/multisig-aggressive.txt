let* fix = \ f -> let* s = \ s0 x -> f (s0 s0) x in s s
     fstPair!! = fstPair# ! !
     sndPair!! = sndPair# ! !
     equalsInteger_3 = equalsInteger# 3#
     equalsInteger_2 = equalsInteger# 2#
     equalsInteger_1 = equalsInteger# 1#
     equalsInteger_0 = equalsInteger# 0#
     mempty! = \ v -> v ! (\ u2 v2 -> v2)
     const = \ u1 v1 -> u1
     ~id = \ ~ y -> y
     fFoldableNil_cfoldMap = fix (\ fFoldableNil_cfoldMap_0 arg ~ ~ dMonoid eta eta_0 -> eta_0 ! (\ ~ -> mempty! dMonoid) (\ x_0 xs ~ -> dMonoid ! const (eta x_0) (fFoldableNil_cfoldMap_0 ~id ! ! dMonoid eta xs)) !)
     Cons! = \ arg_0 arg_1 ~ case_Nil case_Cons -> case_Cons arg_0 arg_1
     Tuple2 = \ fst snd ~ case_Tuple2 -> case_Tuple2 fst snd
     Just = \ justArg ~ case_Just case_Nothing -> case_Just justArg
     True = \ ~ -> const
     False = \ ~ true4 false4 -> false4
     ~False = \ ~ -> False
     ~True = \ ~ -> True
     fUnsafeFromDataTxId_cunsafeFromBuiltinData = \ d -> let* tup = unConstrData# d in ifThenElse# ! (equalsInteger_0 (fstPair!! tup)) (\ ~ -> unBData# (headList# ! (sndPair!! tup))) (\ ~ -> ERROR) !
     fUnsafeFromDataTxOutRef_cunsafeFromBuiltinData =
       \ d_0 ->
         let* tup_0 = unConstrData# d_0
         in ifThenElse# !
              (equalsInteger_0 (fstPair!! tup_0))
              (\ ~ -> let* arg_0_0 = fUnsafeFromDataTxId_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_0)); arg_1_0 = unIData# (headList# ! (tailList# ! (sndPair!! tup_0))) in \ ~ case_TxOutRef -> case_TxOutRef arg_0_0 arg_1_0)
              (\ ~ -> ERROR)
              !
     fUnsafeFromDataCredential_cunsafeFromBuiltinData =
       \ d_1 ->
         let* tup_1 = unConstrData# d_1
              index = fstPair!! tup_1
         in ifThenElse# !
              (equalsInteger_1 index)
              (\ ~ -> let* arg_0_1 = unBData# (headList# ! (sndPair!! tup_1)) in \ ~ case_PubKeyCredential case_ScriptCredential -> case_ScriptCredential arg_0_1)
              (\ ~ -> ifThenElse# ! (equalsInteger_0 index) (\ ~ -> let* arg_0_2 = unBData# (headList# ! (sndPair!! tup_1)) in \ ~ case_PubKeyCredential_0 case_ScriptCredential_0 -> case_PubKeyCredential_0 arg_0_2) (\ ~ -> ERROR) !)
              !
     fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData =
       \ d_2 ->
         let* tup_2 = unConstrData# d_2
              index_0 = fstPair!! tup_2
         in ifThenElse# !
              (equalsInteger_1 index_0)
              (\ ~ ->
                 let* arg_0_3 = unIData# (headList# ! (sndPair!! tup_2))
                      tailList!_~sndPair!!_tup! = tailList# ! (sndPair!! tup_2)
                      arg_1_1 = unIData# (headList# ! tailList!_~sndPair!!_tup!)
                      arg_2 = unIData# (headList# ! (tailList# ! tailList!_~sndPair!!_tup!))
                 in \ ~ case_StakingHash case_StakingPtr -> case_StakingPtr arg_0_3 arg_1_1 arg_2)
              (\ ~ ->
                 ifThenElse# !
                   (equalsInteger_0 index_0)
                   (\ ~ -> let* arg_0_4 = fUnsafeFromDataCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_2)) in \ ~ case_StakingHash_0 case_StakingPtr_0 -> case_StakingHash_0 arg_0_4)
                   (\ ~ -> ERROR)
                   !)
              !
     fUnsafeFromDataDCert_cunsafeFromBuiltinData =
       \ d_3 ->
         let* tup_3 = unConstrData# d_3
              index_1 = fstPair!! tup_3
         in ifThenElse# !
              (equalsInteger# 6# index_1)
              (\ ~ ~ case_DCertDelegDeRegKey case_DCertDelegDelegate case_DCertDelegRegKey case_DCertGenesis m1 n1 p1 -> m1)
              (\ ~ ->
                 ifThenElse# !
                   (equalsInteger# 5# index_1)
                   (\ ~ ~ case_DCertDelegDeRegKey_0 case_DCertDelegDelegate_0 case_DCertDelegRegKey_0 case_DCertGenesis_0 case_DCertMir case_DCertPoolRegister case_DCertPoolRetire -> case_DCertGenesis_0)
                   (\ ~ ->
                      ifThenElse# !
                        (equalsInteger# 4# index_1)
                        (\ ~ ->
                           let* arg_0_5 = unBData# (headList# ! (sndPair!! tup_3))
                                arg_1_2 = unIData# (headList# ! (tailList# ! (sndPair!! tup_3)))
                           in \ ~ case_DCertDelegDeRegKey_1 case_DCertDelegDelegate_1 case_DCertDelegRegKey_1 case_DCertGenesis_1 case_DCertMir_0 case_DCertPoolRegister_0 case_DCertPoolRetire_0 -> case_DCertPoolRetire_0 arg_0_5 arg_1_2)
                        (\ ~ ->
                           ifThenElse# !
                             (equalsInteger_3 index_1)
                             (\ ~ ->
                                let* arg_0_6 = unBData# (headList# ! (sndPair!! tup_3))
                                     arg_1_3 = unBData# (headList# ! (tailList# ! (sndPair!! tup_3)))
                                in \ ~ case_DCertDelegDeRegKey_2 case_DCertDelegDelegate_2 case_DCertDelegRegKey_2 case_DCertGenesis_2 case_DCertMir_1 case_DCertPoolRegister_1 case_DCertPoolRetire_1 -> case_DCertPoolRegister_1 arg_0_6 arg_1_3)
                             (\ ~ ->
                                ifThenElse# !
                                  (equalsInteger_2 index_1)
                                  (\ ~ ->
                                     let* arg_0_7 = fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_3))
                                          arg_1_4 = unBData# (headList# ! (tailList# ! (sndPair!! tup_3)))
                                     in \ ~ case_DCertDelegDeRegKey_3 case_DCertDelegDelegate_3 case_DCertDelegRegKey_3 case_DCertGenesis_3 case_DCertMir_2 case_DCertPoolRegister_2 case_DCertPoolRetire_2 -> case_DCertDelegDelegate_3 arg_0_7 arg_1_4)
                                  (\ ~ ->
                                     ifThenElse# !
                                       (equalsInteger_1 index_1)
                                       (\ ~ ->
                                          let* arg_0_8 = fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_3))
                                          in \ ~ case_DCertDelegDeRegKey_4 case_DCertDelegDelegate_4 case_DCertDelegRegKey_4 case_DCertGenesis_4 case_DCertMir_3 case_DCertPoolRegister_3 case_DCertPoolRetire_3 -> case_DCertDelegDeRegKey_4 arg_0_8)
                                       (\ ~ ->
                                          ifThenElse# !
                                            (equalsInteger_0 index_1)
                                            (\ ~ ->
                                               let* arg_0_9 = fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_3))
                                               in \ ~ case_DCertDelegDeRegKey_5 case_DCertDelegDelegate_5 case_DCertDelegRegKey_5 case_DCertGenesis_5 case_DCertMir_4 case_DCertPoolRegister_4 case_DCertPoolRetire_4 -> case_DCertDelegRegKey_5 arg_0_9)
                                            (\ ~ -> ERROR)
                                            !)
                                       !)
                                  !)
                             !)
                        !)
                   !)
              !
     fUnsafeFromDataNil_cunsafeFromBuiltinData! = \ dUnsafeFromData d_4 -> fix (\ go l -> chooseList# ! ! l (\ ds -> True) (\ ds_0 -> Cons! (dUnsafeFromData (headList# ! l)) (go (tailList# ! l))) ~id) (unListData# d_4)
     fUnsafeFromDataMap_cunsafeFromBuiltinData!! =
       \ dUnsafeFromData_0 dUnsafeFromData_1 d_5 ->
         fix (\ go_0 l_0 -> chooseList# ! ! l_0 (\ ds_1 -> True) (\ ds_2 -> let* tup! = headList# ! l_0 in Cons! (Tuple2 (dUnsafeFromData_0 (fstPair!! tup!)) (dUnsafeFromData_1 (sndPair!! tup!))) (go_0 (tailList# ! l_0))) ~id) (unMapData# d_5)
     fUnsafeFromDataValue = \ eta_1 -> fUnsafeFromDataMap_cunsafeFromBuiltinData!! unBData# unIData# eta_1
     fUnsafeFromDataMaybe_cunsafeFromBuiltinData! =
       \ dUnsafeFromData_2 d_6 ->
         let* tup_4 = unConstrData# d_6
              index_2 = fstPair!! tup_4
         in ifThenElse# ! (equalsInteger_0 index_2) (\ ~ -> Just (dUnsafeFromData_2 (headList# ! (sndPair!! tup_4)))) (\ ~ -> ifThenElse# ! (equalsInteger_1 index_2) ~False (\ ~ -> ERROR) !) !
     fUnsafeFromDataTxOut_cunsafeFromBuiltinData =
       \ d_7 ->
         let* tup_5 = unConstrData# d_7
         in ifThenElse# !
              (equalsInteger_0 (fstPair!! tup_5))
              (\ ~ ->
                 let* tup_6 = unConstrData# (headList# ! (sndPair!! tup_5))
                      arg_0_a =
                        ifThenElse# !
                          (equalsInteger_0 (fstPair!! tup_6))
                          (\ ~ ->
                             let* arg_0_b = fUnsafeFromDataCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_6))
                                  arg_1_5 = fUnsafeFromDataMaybe_cunsafeFromBuiltinData! fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData (headList# ! (tailList# ! (sndPair!! tup_6)))
                             in \ ~ case_Address -> case_Address arg_0_b arg_1_5)
                          (\ ~ -> ERROR)
                          !
                      tailList!_~sndPair!!_tup!_0 = tailList# ! (sndPair!! tup_5)
                      arg_1_6 = fUnsafeFromDataMap_cunsafeFromBuiltinData!! unBData# fUnsafeFromDataValue (headList# ! tailList!_~sndPair!!_tup!_0)
                      arg_2_0 = fUnsafeFromDataMaybe_cunsafeFromBuiltinData! unBData# (headList# ! (tailList# ! tailList!_~sndPair!!_tup!_0))
                 in \ ~ case_TxOut -> case_TxOut arg_0_a arg_1_6 arg_2_0)
              (\ ~ -> ERROR)
              !
     fUnsafeFromDataTuple2_cunsafeFromBuiltinData!! =
       \ dUnsafeFromData_3 dUnsafeFromData_4 d_8 ->
         let* tup_7 = unConstrData# d_8
         in ifThenElse# ! (equalsInteger_0 (fstPair!! tup_7)) (\ ~ -> Tuple2 (dUnsafeFromData_3 (headList# ! (sndPair!! tup_7))) (dUnsafeFromData_4 (headList# ! (tailList# ! (sndPair!! tup_7))))) (\ ~ -> ERROR) !
     fUnsafeFromDataExtended_cunsafeFromBuiltinData! =
       \ dUnsafeFromData_5 d_9 ->
         let* tup_8 = unConstrData# d_9
              index_3 = fstPair!! tup_8
         in ifThenElse# !
              (equalsInteger_2 index_3)
              (\ ~ ~ m9 n9 p9 -> p9)
              (\ ~ ->
                 ifThenElse# !
                   (equalsInteger_1 index_3)
                   (\ ~ -> let* arg_0_c = dUnsafeFromData_5 (headList# ! (sndPair!! tup_8)) in \ ~ case_Finite case_NegInf case_PosInf -> case_Finite arg_0_c)
                   (\ ~ -> ifThenElse# ! (equalsInteger_0 index_3) (\ ~ ~ m8 n8 p8 -> n8) (\ ~ -> ERROR) !)
                   !)
              !
     fUnsafeFromDataBool_cunsafeFromBuiltinData = \ d_a -> let* index_4 = fstPair!! (unConstrData# d_a) in ifThenElse# ! (equalsInteger_1 index_4) ~True (\ ~ -> ifThenElse# ! (equalsInteger_0 index_4) ~False (\ ~ -> ERROR) !) !
     v_0 = Tuple2 (\ ds_3 ds_4 x_1 -> ds_3 (ds_4 x_1)) (\ x_2 -> x_2)
in \ datum redeemer ctx ->
     let* tup_9 = unConstrData# ctx
          p!_const =
            ifThenElse# !
              (equalsInteger_0 (fstPair!! tup_9))
              (\ ~ ->
                 let* tup_a = unConstrData# (headList# ! (sndPair!! tup_9))
                      arg_0_d =
                        ifThenElse# !
                          (equalsInteger_0 (fstPair!! tup_a))
                          (\ ~ ->
                             let* arg_0_e =
                                    fUnsafeFromDataNil_cunsafeFromBuiltinData!
                                      (\ d_b ->
                                         let* tup_b = unConstrData# d_b
                                         in ifThenElse# !
                                              (equalsInteger_0 (fstPair!! tup_b))
                                              (\ ~ ->
                                                 let* arg_0_f = fUnsafeFromDataTxOutRef_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_b))
                                                      arg_1_7 = fUnsafeFromDataTxOut_cunsafeFromBuiltinData (headList# ! (tailList# ! (sndPair!! tup_b)))
                                                 in \ ~ case_TxInInfo -> case_TxInInfo arg_0_f arg_1_7)
                                              (\ ~ -> ERROR)
                                              !)
                                      (headList# ! (sndPair!! tup_a))
                                  t! = tailList# ! (sndPair!! tup_a)
                                  arg_1_8 = fUnsafeFromDataNil_cunsafeFromBuiltinData! fUnsafeFromDataTxOut_cunsafeFromBuiltinData (headList# ! t!)
                                  t!_0 = tailList# ! t!
                                  arg_2_1 = fUnsafeFromDataMap_cunsafeFromBuiltinData!! unBData# fUnsafeFromDataValue (headList# ! t!_0)
                                  t!_1 = tailList# ! t!_0
                                  arg_3 = fUnsafeFromDataMap_cunsafeFromBuiltinData!! unBData# fUnsafeFromDataValue (headList# ! t!_1)
                                  t!_2 = tailList# ! t!_1
                                  arg_4 = fUnsafeFromDataNil_cunsafeFromBuiltinData! fUnsafeFromDataDCert_cunsafeFromBuiltinData (headList# ! t!_2)
                                  t!_3 = tailList# ! t!_2
                                  arg_5 = fUnsafeFromDataNil_cunsafeFromBuiltinData! (fUnsafeFromDataTuple2_cunsafeFromBuiltinData!! fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData unIData#) (headList# ! t!_3)
                                  t!_4 = tailList# ! t!_3
                                  tup_c = unConstrData# (headList# ! t!_4)
                                  arg_6 =
                                    ifThenElse# !
                                      (equalsInteger_0 (fstPair!! tup_c))
                                      (\ ~ ->
                                         let* tup_d = unConstrData# (headList# ! (sndPair!! tup_c))
                                              arg_0_g =
                                                ifThenElse# !
                                                  (equalsInteger_0 (fstPair!! tup_d))
                                                  (\ ~ ->
                                                     let* arg_0_h = fUnsafeFromDataExtended_cunsafeFromBuiltinData! unIData# (headList# ! (sndPair!! tup_d))
                                                          arg_1_9 = fUnsafeFromDataBool_cunsafeFromBuiltinData (headList# ! (tailList# ! (sndPair!! tup_d)))
                                                     in \ ~ case_LowerBound -> case_LowerBound arg_0_h arg_1_9)
                                                  (\ ~ -> ERROR)
                                                  !
                                              tup_e = unConstrData# (headList# ! (tailList# ! (sndPair!! tup_c)))
                                              arg_1_a =
                                                ifThenElse# !
                                                  (equalsInteger_0 (fstPair!! tup_e))
                                                  (\ ~ ->
                                                     let* arg_0_i = fUnsafeFromDataExtended_cunsafeFromBuiltinData! unIData# (headList# ! (sndPair!! tup_e))
                                                          arg_1_b = fUnsafeFromDataBool_cunsafeFromBuiltinData (headList# ! (tailList# ! (sndPair!! tup_e)))
                                                     in \ ~ case_UpperBound -> case_UpperBound arg_0_i arg_1_b)
                                                  (\ ~ -> ERROR)
                                                  !
                                         in \ ~ case_Interval -> case_Interval arg_0_g arg_1_a)
                                      (\ ~ -> ERROR)
                                      !
                                  t!_5 = tailList# ! t!_4
                                  arg_7 = fUnsafeFromDataNil_cunsafeFromBuiltinData! unBData# (headList# ! t!_5)
                                  t!_6 = tailList# ! t!_5
                                  arg_8 = fUnsafeFromDataNil_cunsafeFromBuiltinData! (fUnsafeFromDataTuple2_cunsafeFromBuiltinData!! unBData# (\ x_3 -> x_3)) (headList# ! t!_6)
                                  arg_9 = fUnsafeFromDataTxId_cunsafeFromBuiltinData (headList# ! (tailList# ! t!_6))
                             in \ ~ case_TxInfo -> case_TxInfo arg_0_e arg_1_8 arg_2_1 arg_3 arg_4 arg_5 arg_6 arg_7 arg_8 arg_9)
                          (\ ~ -> ERROR)
                          !
                      tup_f = unConstrData# (headList# ! (tailList# ! (sndPair!! tup_9)))
                      index_5 = fstPair!! tup_f
                      arg_1_c =
                        ifThenElse# !
                          (equalsInteger_3 index_5)
                          (\ ~ -> let* arg_0_j = fUnsafeFromDataDCert_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_f)) in \ ~ case_Certifying case_Minting case_Rewarding case_Spending -> case_Certifying arg_0_j)
                          (\ ~ ->
                             ifThenElse# !
                               (equalsInteger_2 index_5)
                               (\ ~ -> let* arg_0_k = fUnsafeFromDataStakingCredential_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_f)) in \ ~ case_Certifying_0 case_Minting_0 case_Rewarding_0 case_Spending_0 -> case_Rewarding_0 arg_0_k)
                               (\ ~ ->
                                  ifThenElse# !
                                    (equalsInteger_1 index_5)
                                    (\ ~ -> let* arg_0_m = fUnsafeFromDataTxOutRef_cunsafeFromBuiltinData (headList# ! (sndPair!! tup_f)) in \ ~ case_Certifying_1 case_Minting_1 case_Rewarding_1 case_Spending_1 -> case_Spending_1 arg_0_m)
                                    (\ ~ ->
                                       ifThenElse# !
                                         (equalsInteger_0 index_5)
                                         (\ ~ -> let* arg_0_n = unBData# (headList# ! (sndPair!! tup_f)) in \ ~ case_Certifying_2 case_Minting_2 case_Rewarding_2 case_Spending_2 -> case_Minting_2 arg_0_n)
                                         (\ ~ -> ERROR)
                                         !)
                                    !)
                               !)
                          !
                 in \ ~ case_ScriptContext -> case_ScriptContext arg_0_d arg_1_c)
              (\ ~ -> ERROR)
              !
              !
              const
     in ifThenElse# !
          (lessThanInteger#
             (fFoldableNil_cfoldMap
                ~id
                !
                !
                (Tuple2 (\ eta_2 eta_3 -> v_0 ! const eta_3 eta_2) (mempty! v_0))
                (\ x_4 y_0 -> addInteger# y_0 1#)
                (fix
                   (\ foldr arg_0 ~ ~ f_0 acc l_1 -> l_1 ! (\ ~ -> acc) (\ x_5 xs_0 ~ -> f_0 x_5 (foldr ~id ! ! f_0 acc xs_0)) !)
                   ~id
                   !
                   !
                   (\ e xs_1 ->
                      p!_const
                        !
                        (\ ww ww_0 ww_1 ww_2 ww_3 ww_4 ww_5 ww_6 ww_7 ww_8 ->
                           fFoldableNil_cfoldMap ~id ! ! (Tuple2 (\ ds_5 b -> ds_5 ! (\ ipv ~ -> ds_5) (\ ~ -> b) !) False) (\ x_6 -> ifThenElse# ! (equalsByteString# e x_6) (\ ~ -> Just x_6) ~False !) ww_6 ! (\ ds_6 -> ~True) ~False !)
                        !
                        (\ ~ -> Cons! e xs_1)
                        (\ ~ -> xs_1)
                        !)
                   True
                   (Cons! "some-string-which-is-28-long"#b (Cons! "s0me-string-which-is-28-long"#b (Cons! "some-string-which-is-28-l0ng"#b True))))
                0#)
             2#)
          (\ ~ -> False)
          ~True
          !
          !
          (\ ~ ~ z -> z)
          (\ ~ -> ERROR)
          !
